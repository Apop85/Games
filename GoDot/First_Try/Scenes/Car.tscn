[gd_scene load_steps=4 format=2]

[ext_resource path="res://assets/auto.png" type="Texture" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody2D

# Get different elements of car
onready var wheel1 = $car_container/wheel1
onready var wheel2 = $car_container/wheel2
onready var car_container = $car_container

const GRAVITY = 400
const SPEED = 100 
const JUMP_POWER = 150
const UP_VECTOR = Vector2(0,-1)
const FLOOR_NORMAL = Vector2(0,1)
const WHEEL_SPEED = 20

# Set car defaults 
var starting_pos = Vector2(0,0)
var is_in = false
var movement = Vector2(0,0)
var player

func _ready():
	pass

func _physics_process(delta):
#	Set speed of x axis to 0
	movement.x = 0
#	Set gravity over time
	movement.y += GRAVITY * delta
	
#	If player is inside car
	if is_in:
		check_key_input()
	
#		Alter wheel rotation depending on direction
		if movement.x < 0:
			wheel1.rotation -= WHEEL_SPEED * delta
			wheel2.rotation -= WHEEL_SPEED * delta
			
		if movement.x > 0:
			wheel1.rotation += WHEEL_SPEED * delta
			wheel2.rotation += WHEEL_SPEED * delta

#	Check if car is colliding 
#	movement = move_and_slide_with_snap(movement, Vector2(0,1), FLOOR_NORMAL)
	movement = move_and_slide(movement, UP_VECTOR)
		
	
func check_key_input():
#	Check which key is or was pressed
	if Input.is_action_pressed(\"left\"):
		movement.x -= 1 * SPEED
	if Input.is_action_pressed(\"right\"):
		movement.x += 1 * SPEED
	if Input.is_action_just_pressed(\"jump\"):
		movement.y = -JUMP_POWER
	if Input.is_action_just_pressed(\"action\") and is_in:
#		player = car_container.get_child(\"Player\")
		for child in self.get_children():
			if child.name == \"Player\":
#				Call enter_car function of Car
				enter_car(child, false)

		
	
func enter_car(player, getin):
	if getin:
		starting_pos = self.position
	#	Remove player element from parent
		player.get_parent().remove_child(player)
	#	Add player as child of car
		add_child(player)
	#	Set z index of car
		car_container.set_z_index(1)
	#	Freeze player animation
		player.freeze = true
		is_in = true
	#	Adjust player position in car
		player.position = Vector2(0,-12)
	else:
		player.get_parent().remove_child(player)
		self.get_parent().get_parent().add_child(player)
#		print(car_parent.name)
		is_in = false
		player.freeze = false
		player.position = self.position
		self.position = starting_pos
#		return player
		
"

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 14.0465, 4.66608 )

[node name="Car" type="KinematicBody2D"]
position = Vector2( 0, -1 )
z_index = 1
collision_layer = 4
script = SubResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( 0.7955, -3.09031 )
shape = SubResource( 2 )

[node name="car_container" type="Node2D" parent="."]

[node name="car" type="Sprite" parent="car_container"]
position = Vector2( -15.6889, -12.9489 )
texture = ExtResource( 1 )
centered = false
region_enabled = true
region_rect = Rect2( 0, 0, 32, 13 )

[node name="light" type="Sprite" parent="car_container"]
visible = false
self_modulate = Color( 1, 1, 1, 0.560784 )
position = Vector2( 15.6889, -8.70625 )
texture = ExtResource( 1 )
centered = false
region_enabled = true
region_rect = Rect2( 11, 14, 16, 9 )

[node name="wheel1" type="Sprite" parent="car_container"]
position = Vector2( 9.9, -1 )
texture = ExtResource( 1 )
region_enabled = true
region_rect = Rect2( 0.54, 14.5, 5.4, 5.91 )

[node name="wheel2" type="Sprite" parent="car_container"]
position = Vector2( -8.1, -1 )
texture = ExtResource( 1 )
region_enabled = true
region_rect = Rect2( 0.5, 13.5623, 5.268, 6.43773 )
